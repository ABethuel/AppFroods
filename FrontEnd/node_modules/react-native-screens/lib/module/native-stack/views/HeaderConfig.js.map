{"version":3,"sources":["HeaderConfig.tsx"],"names":["useTheme","React","ScreenStackHeaderBackButtonImage","ScreenStackHeaderCenterView","ScreenStackHeaderConfig","ScreenStackHeaderLeftView","ScreenStackHeaderRightView","processFonts","HeaderConfig","backButtonImage","backButtonInCustomView","direction","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerCenter","headerHideBackButton","headerHideShadow","headerLargeStyle","headerLargeTitle","headerLargeTitleHideShadow","headerLargeTitleStyle","headerLeft","headerRight","headerShown","headerStyle","headerTintColor","headerTitle","headerTitleStyle","headerTopInsetEnabled","headerTranslucent","route","statusBarAnimation","statusBarHidden","statusBarStyle","title","colors","tintColor","primary","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","fontFamily","backgroundColor","card","fontSize","blurEffect","color","undefined","name","text"],"mappings":"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","sourcesContent":["import { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n} from 'react-native-screens';\nimport { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n};\n\nexport default function HeaderConfig({\n  backButtonImage,\n  backButtonInCustomView,\n  direction,\n  headerBackTitle,\n  headerBackTitleStyle = {},\n  headerBackTitleVisible = true,\n  headerCenter,\n  headerHideBackButton,\n  headerHideShadow,\n  headerLargeStyle = {},\n  headerLargeTitle,\n  headerLargeTitleHideShadow,\n  headerLargeTitleStyle = {},\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle = {},\n  headerTintColor,\n  headerTitle,\n  headerTitleStyle = {},\n  headerTopInsetEnabled = true,\n  headerTranslucent,\n  route,\n  statusBarAnimation,\n  statusBarHidden,\n  statusBarStyle,\n  title,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor = headerTintColor ?? colors.primary;\n\n  const [\n    backTitleFontFamily,\n    largeTitleFontFamily,\n    titleFontFamily,\n  ] = processFonts([\n    headerBackTitleStyle.fontFamily,\n    headerLargeTitleStyle.fontFamily,\n    headerTitleStyle.fontFamily,\n  ]);\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyle.backgroundColor ? headerStyle.backgroundColor : colors.card\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyle.fontSize}\n      blurEffect={headerStyle.blurEffect}\n      color={tintColor}\n      direction={direction}\n      hidden={headerShown === false}\n      hideBackButton={headerHideBackButton}\n      hideShadow={headerHideShadow}\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyle.backgroundColor}\n      largeTitleColor={headerLargeTitleStyle.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyle.fontSize}\n      largeTitleHideShadow={headerLargeTitleHideShadow}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      title={\n        headerTitle !== undefined\n          ? headerTitle\n          : title !== undefined\n          ? title\n          : route.name\n      }\n      titleColor={\n        headerTitleStyle.color !== undefined\n          ? headerTitleStyle.color\n          : headerTintColor !== undefined\n          ? headerTintColor\n          : colors.text\n      }\n      titleFontFamily={titleFontFamily}\n      titleFontSize={headerTitleStyle.fontSize}\n      topInsetEnabled={headerTopInsetEnabled}\n      translucent={headerTranslucent === true}>\n      {headerRight !== undefined ? (\n        <ScreenStackHeaderRightView>\n          {headerRight({ tintColor })}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {backButtonImage !== undefined ? (\n        <ScreenStackHeaderBackButtonImage\n          key=\"backImage\"\n          source={backButtonImage}\n        />\n      ) : null}\n      {headerLeft !== undefined ? (\n        <ScreenStackHeaderLeftView>\n          {headerLeft({ tintColor })}\n        </ScreenStackHeaderLeftView>\n      ) : null}\n      {headerCenter !== undefined ? (\n        <ScreenStackHeaderCenterView>\n          {headerCenter({ tintColor })}\n        </ScreenStackHeaderCenterView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n"]}